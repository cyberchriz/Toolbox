// this Vulkan/GLSL compute shader performs elementwise execution of the round(x) function,
// i.e. rounding to the nearest integer

#version 450

// setup source data buffer
layout(set = 0, binding = 0) buffer DataBuffer {
    float data[];
};
        
// setup result data buffer
layout(set = 0, binding = 1) buffer ResultBuffer {
    float result[]; // result[0] is initialized to 0
};

// setup push constants layout (according to shader_exec OVERLOAD_2)
layout(push_constant) uniform PushConstants {
    uint data_rows;
    uint data_cols;
    uint data_depth;

    uint result_rows;
    uint result_cols;
    uint result_depth;

    float constant1;        // not used for this shader
    float constant2;        // not used for this shader
    float constant3;        // not used for this shader
};

// setup local size according to workgroup size
layout(local_size_x = 32) in;

// setup global variables
uint data_elements = data_rows * data_cols * data_depth;

// main function
void main() {
    uint data_flat_index = gl_GlobalInvocationID.x;
    if (data_flat_index < data_elements) {
        result[data_flat_index] = floor(data[data_flat_index] + 0.5);
    }
}