// this Vulkan/GLSL compute shader implements the pow() function,
// i.e. it performs elementwise calculation of the value to the power of
// the exponent given via push constant (default: 2.0)

#version 450
#define WORKGROUP_SIZE 256

// setup source data buffer
layout(set = 0, binding = 0) buffer DataBuffer {
    float data[];
};
        
// setup result data buffer
layout(set = 0, binding = 1) buffer ResultBuffer {
    float result[];
};

// setup push constants layout
layout(push_constant) uniform PushConstants {
    uint data_elements;
    float exponent;
};

// setup local size according to workgroup size
layout(local_size_x = WORKGROUP_SIZE) in;

// main function
void main() {
    uint x = gl_GlobalInvocationID.x;
    if (x < data_elements) {
        float value = data[x];
        if (exponent == 2) {
            result[x] = value * value;
        }
        else if (exponent == 3) {
            result[x] = value * value * value;
        }
        else {
            result[x] = pow(value, exponent);
        }
    }
}